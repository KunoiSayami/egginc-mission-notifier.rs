name: Build Releases

on:
  push:

  workflow_dispatch:
    branches:
      - master


env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        job:
          - os: macos-latest
            binary_name: egginc-mission-notifier_darwin_amd64
            protobuf_remote: https://github.com/protocolbuffers/protobuf/releases/download/v25.6/protoc-25.6-osx-universal_binary.zip
            protobuf_binary: ./bin/protoc
          - os: ubuntu-latest
            binary_name: egginc-mission-notifier_linux_amd64
            protobuf_binary: /usr/bin/protoc
          - os: windows-latest
            binary_name: egginc-mission-notifier_windows_amd64.exe
            protobuf_remote: https://github.com/protocolbuffers/protobuf/releases/download/v25.6/protoc-25.6-win64.zip
            protobuf_binary: ./bin/protoc

    name: Build
    runs-on: ${{ matrix.job.os }}
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v4

      - name: Prepare protobuf
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y protobuf-compiler
          else
            curl -fL -o protoc.zip ${{ matrix.job.protobuf_remote }}
            unzip protoc.zip
          fi
      - name: Environment
        run: |
          git submodule update --init --recursive
      - name: Update rust
        run: rustup update

      - name: Build binary
        env:
          PROTOC: ${{ matrix.job.protobuf_binary }}
        run: |
          cargo build --profile release
      - name: Rename binary
        id: rename
        shell: bash
        env:
          BINARY_NAME: ${{ matrix.job.binary_name }}
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            mv target/release/egginc-mission-notifier.exe target/release/$BINARY_NAME
          else
            mv target/release/egginc-mission-notifier target/release/$BINARY_NAME
          fi
          echo "bin=target/release/$BINARY_NAME" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ matrix.job.binary_name }}
          path: target/release/${{ matrix.job.binary_name }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.rename.outputs.bin }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  build_aarch64:
#    name: Cross build
#    runs-on: ubuntu-latest
#    env:
#      RUST_BACKTRACE: full
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Environment
#        run: |
#          git submodule update --init --recursive
#          sudo apt-get install -y protobuf-compiler
#      - name: Update rust
#        run: rustup target install aarch64-unknown-linux-musl
#      - name: Install cross
#        run: cargo install cross
#      - name: Build binary
#        env:
#          PROTOC: /usr/bin/protoc
#        run: |
#          cross build --target aarch64-unknown-linux-musl --profile release
#      - run: mv target/aarch64-unknown-linux-musl/release/egginc-mission-notifier target/aarch64-unknown-linux-musl/release/egginc-mission-notifier_linux_aarch64
#      - uses: actions/upload-artifact@v4.3.3
#        with:
#          name: egginc-mission-notifier_linux_aarch64
#          path: target/aarch64-unknown-linux-musl/release/egginc-mission-notifier_linux_aarch64
#      - name: Release
#        uses: softprops/action-gh-release@v2
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/aarch64-unknown-linux-musl/release/egginc-mission-notifier_linux_aarch64
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
